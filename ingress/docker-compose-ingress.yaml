version: "3.6"

services:
  traefik:
    container_name: "traefik"
    image: "traefik:v2.11"
    depends_on:
      - crowdsec
    env_file:
      - .env.common
      - .env.$TRAEFIK
    restart: "on-failure:5"
    ports:
      - "443:443/tcp"
      - "80:80/tcp"      
    volumes:
      - "/config/ingress/traefik/letsencrypt:/letsencrypt"
      - "/config/ingress/traefik/logs:/logs"
      - "/config/ingress/traefik/plugins:/plugins-local"
      - "/config/ingress/traefik/rules:/rules"
      - "/config/ingress/traefik:/config"
#      - "/var/run/docker.sock:/var/run/docker.sock:ro"   
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "gateway.docker.internal:host-gateway"
    command:
      - "--experimental.hub=true"
      - "--hub.tls.insecure=false"
      - "--metrics.prometheus.addrouterslabels=false"
      - "--configFile=/config/traefik.yml"
    entrypoint:
      - "/entrypoint.sh"
    labels:
      traefik.docker.network: "ingress"
      traefik.enable: "true"
      traefik.http.routers.api.entrypoints: "https"
      traefik.http.routers.api.middlewares: "chain-authelia@file"
      traefik.http.routers.api.rule: "Host(`traefik.$LOCAL.$DOMAIN`)"
      traefik.http.routers.api.service: "api@internal"
      traefik.http.routers.api.tls: "true"
      traefik.http.routers.api.tls.certresolver: "myresolver"
    networks:
      - "ingress"    
      - "t3_proxy"
      - "t2_proxy"
      - "media"
      - "authentication"
      - "monitoring"
      - "network"
      - "utilities"
      - "communications"
      - "productivity"
      - "domotica"
      - "pass_mgmt"
      - "kasm"
      - "linkwarden"
    logging:
      driver: "json-file"
      options: {}

  ddclient:
    container_name: "ddclient"
    image: "ghcr.io/linuxserver/ddclient:latest"
    restart: "on-failure:5"
    env_file:
      - .env.common
      - .env.$DDCLIENT
    working_dir: "/"  
    entrypoint:
      - "/init"
    volumes:
      - "/config/ingress/ddclient:/config"
    networks:
      - "ddclient"
    logging:
      driver: "json-file"
      options: {}

  crowdsec:
    container_name: "crowdsec"
    image: "crowdsecurity/crowdsec:latest"
    restart: "on-failure:5"
    expose:
      - "6060/tcp"
      - "8080/tcp"
    env_file:
      - .env.common
      - .env.$CROWDSEC
    volumes:
      - "/config/ingress/crowdsec/config:/etc/crowdsec"
      - "/config/ingress/crowdsec/data:/var/lib/crowdsec/data"
      - "/config/ingress/traefik/logs/access:/logs/web:ro"
      - "/var/log:/var/log:ro"
    security_opt:
      - "no-new-privileges:true"
    entrypoint:
      - "/bin/sh"
      - "-c"
      - "/bin/bash /docker_start.sh"
    logging:
      driver: "json-file"
      options: {}
    networks:
      - "ingress"

  # traefik-bouncer:
  #   container_name: "traefik-bouncer"
  #   image: "fbonalair/traefik-crowdsec-bouncer"
  #   command:
  #     - "/app"        
  #   restart: "always"
  #   expose:
  #     - "8080/tcp"
  #   env_file:
  #     - .env.common
  #     - .env.$BOUNCER
  #   networks:
  #     - "ingress"
  #   logging:
  #     driver: "json-file"
  #     options: {}
  #   security_opt:
  #     - "no-new-privileges:true"

networks:
  t2_proxy:
    external: true
    name: "t2_proxy"
  t3_proxy:
    external: true
    name: "t3_proxy"
  media:
    name: "media"
  ingress:
    name: "ingress"
  authentication:
    name: "authentication"
  communications:
    name: "communications"
  domotica:
    name: "domotica"
  monitoring:
    name: "monitoring"
  network:
    name: "network"
  utilities:
    name: "utilities"
  productivity:
    name: "productivity"
  pass_mgmt:
    name: "pass_mgmt"
  ddclient:
    name: "ddclient"
  kasm:
    name: "kasm"
  linkwarden:
    name: "linkwarden"

