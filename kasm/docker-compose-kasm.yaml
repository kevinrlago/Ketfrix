version: '3'
services:
  db:
    container_name: kasm_db
    image: postgres:12-alpine
    healthcheck:
      test: "pg_isready --username=kasmapp && cat /proc/1/cmdline | grep -q '^postgres'"
      timeout: 5s
      retries: 20
    networks:
      - kasm_internal
    env_file:
      - .env.kasm-postgres
    volumes:
      - /config/kasm/1.14.0/conf/database/data.sql:/docker-entrypoint-initdb.d/data.sql
      - /config/kasm/1.14.0/conf/database/pg_hba.conf:/var/lib/postgresql/conf/pg_hba.conf
      - /config/kasm/1.14.0/conf/database/postgresql.conf:/var/lib/postgresql/conf/postgresql.conf
      - /config/kasm/1.14.0/conf/database/:/tmp/
      - /config/kasm/1.14.0/certs/db_server.crt:/etc/ssl/certs/db_server.crt
      - /config/kasm/1.14.0/certs/db_server.key:/etc/ssl/certs/db_server.key
      - /config/kasm/1.14.0/log/postgres/:/var/log/postgres/
      - kasm_db_1.14.0:/var/lib/postgresql/data
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "20"
    command: postgres -c ssl=on -c ssl_cert_file=/etc/ssl/certs/db_server.crt -c ssl_key_file=/etc/ssl/certs/db_server.key -c config_file=/var/lib/postgresql/conf/postgresql.conf -c hba_file=/var/lib/postgresql/conf/pg_hba.conf
    restart: "always"

  kasm_redis:
    container_name: kasm_redis
    command: ["sh", "-c", "redis-server --requirepass $${REDIS_PASSWORD}"]
    user: "${PUID}:${PGID}"
    image: redis:5-alpine
    networks:
      - kasm_internal
    env_file:
      - .env.kasm-redis
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "20"
    restart: "always"

  kasm_api:
    container_name: kasm_api
    user: "${PUID}:${PGID}"
    image: "kasmweb/api:1.14.0"
    read_only: true
    networks:
      - kasm_internal
    volumes:
      - /config/kasm/1.14.0:/opt/kasm/current
      - /config/kasm/1.14.0/tmp/api:/tmp
    depends_on:
      - db
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "20"

  kasm_manager:
    container_name: kasm_manager
    user: "${PUID}:${PGID}"
    image: "kasmweb/manager:1.14.0"
    read_only: true
    networks:
      - kasm_internal
    volumes:
      - /config/kasm/1.14.0:/opt/kasm/current
    depends_on:
      - db
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "20"

  kasm_agent:
    container_name: kasm_agent
    user: root
    image: "kasmweb/agent:1.14.0"
    read_only: true
    networks:
      - kasm_internal
    volumes:
      - /config/kasm/1.14.0:/opt/kasm/current
      - /var/run/docker.sock:/var/run/docker.sock
      - /config/kasm/1.14.0/conf/nginx:/etc/nginx/conf.d
    depends_on:
      - kasm_manager
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "20"

  kasm_share:
    container_name: kasm_share
    user: root
    image: "kasmweb/share:1.14.0"
    read_only: true
    networks:
      - kasm_internal
    volumes:
      - /config/kasm/1.14.0:/opt/kasm/current
    restart: always
    depends_on:
      - db
      - kasm_redis
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "20"

  kasm_guac:
    container_name: kasm_guac
    user: "${PUID}:${PGID}"
    image: "kasmweb/kasm-guac:1.14.0"
    read_only: true
    networks:
      - kasm_internal
    volumes:
      - /config/kasm/1.14.0:/opt/kasm/current
      - /config/kasm/1.14.0/tmp/guac:/tmp
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "20"

  proxy:
    container_name: kasm_proxy
    image: "kasmweb/nginx:1.25.1"
    expose:
      - 443
    networks:
      - kasm_internal
      - kasm
    volumes:
      - /config/kasm/1.14.0/conf/nginx:/etc/nginx/conf.d:ro
      - /config/kasm/1.14.0/certs/kasm_nginx.key:/etc/ssl/private/kasm_nginx.key
      - /config/kasm/1.14.0/certs/kasm_nginx.crt:/etc/ssl/certs/kasm_nginx.crt
      - /config/kasm/1.14.0/www:/srv/www:ro
      - /config/kasm/1.14.0/log/nginx:/var/log/external/nginx/
      - /config/kasm/1.14.0/log/logrotate:/var/log/external/logrotate/
    depends_on:
      - kasm_manager
      - kasm_api
      - kasm_agent
      - kasm_share
      - kasm_guac
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "20"
    labels:
      - "traefik.docker.network=kasm"
      - "traefik.enable=true"
      - "traefik.http.routers.$VM.rule=Host(`$VM.$DOMAIN`)"
      - "traefik.http.routers.$VM.entrypoints=https"
      - "traefik.http.routers.$VM.tls=true"
      - "traefik.http.routers.$VM.service=${VM}_svc"
      - "traefik.http.routers.${VM}_http.rule=Host(`$VM.$DOMAIN`)"
      - "traefik.http.routers.${VM}_http.entrypoints=http"
      - "traefik.http.routers.${VM}_http.middlewares=chain-authelia@file"
      - "traefik.http.routers.$VM.tls.certresolver=myresolver"
      - "traefik.http.services.${VM}_svc.loadbalancer.server.port=443"
volumes:
  kasm_db_1.14.0:
    external: true

networks:
  kasm:
    name: "kasm"
  kasm_internal:
    name: "kasm_internal"


