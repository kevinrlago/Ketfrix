version: "3.6"

services:

  # authelia:
  #   container_name: "authelia"
  #   image: "authelia/authelia" 
  #   restart: "on-failure:5"
  #   depends_on:
  #     - openldap
  #     - redis
  #     - mariadb
  #   expose:
  #     - "9091/tcp"    
  #   entrypoint:
  #     - "/app/entrypoint.sh"
  #   working_dir: "/app"
  #   command:
  #     - "--config"
  #     - "/config/configuration.yml"
  #   env_file:
  #     - .env.common
  #     - .env.phpldapadmin
  #   volumes:
  #     - "/config/authentication/authelia:/config"
  #   labels:
  #     traefik.docker.network: "authentication"
  #     traefik.enable: "true"
  #     traefik.http.routers.authelia.entrypoints: "https"
  #     traefik.http.routers.authelia.rule: "Host(`auth.$DOMAIN`)"
  #     traefik.http.routers.authelia.tls: "true"
  #   networks:
  #     - "authentication"
  #     - "authelia"
  #   logging:
  #     driver: "json-file"
  #     options: {}
  #   # healthcheck:
  #   #   test: curl --fail http://localhost:9091 || exit 1
  #   #   interval: 60s
  #   #   retries: 5
  #   #   start_period: 20s
  #   #   timeout: 10s
  #   security_opt:
  #     - no-new-privileges:true
  #     - apparmor:docker-default

  # keycloak:
  #   container_name: keycloak
  #   image: quay.io/keycloak/keycloak:latest
  #   expose:
  #     - 8080
  #   env_file:
  #     - .env.common
  #     - .env.keycloak
  #   command:
  #     - build
  #     - start
  #   networks:
  #     - authentication
  #     - authelia
  #   depends_on:
  #     - postgresql
  #   labels:
  #     traefik.docker.network: "authentication"
  #     traefik.enable: "true"
  #     traefik.http.routers.keycloak.entrypoints: "https"
  #     traefik.http.routers.keycloak.rule: "Host(`auth.$DOMAIN`)"
  #     traefik.http.routers.keycloak.tls: "true"
  #     traefik.http.services.keycloak.loadbalancer.server.port: 8080          
  #   security_opt:
  #     - no-new-privileges:true
  #     - apparmor:docker-default
  #   logging:
  #     driver: "json-file"
  #     options: {}    

  # postgresql:
  #   image: postgres:16
  #   env_file:
  #     - .env.common
  #     - .env.postgresql
  #   volumes:
  #     - '/config/authentication/keycloak/postgresql_data:/var/lib/postgresql/data'
  #   networks:
  #     - authelia

  postgresql:
    container_name: postgresql-auth
    image: docker.io/library/postgres:12-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - database:/var/lib/postgresql/data
    env_file:
      - .env
      - .env.common
      - .env.postgresql     
    logging:
      driver: "json-file"
      options: {}
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default

  redis:
    container_name: redis
    image: docker.io/library/redis:alpine
    command: --save 60 1 --loglevel warning
    restart: on-failure:5
    expose:
      - 6379
    env_file:
      - .env
      - .env.common
      - .env.redis
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - redis:/data
    labels:
      traefik.docker.network: "authentication"
      traefik.enable: "true"
      traefik.tcp.routers.redis.entrypoints: "redis"
      traefik.tcp.routers.redis.rule: "HostSNI(`redis.$DOMAIN`) || HostSNI(`redis.$LOCAL.$DOMAIN`)"
      traefik.tcp.routers.redis.service: "redis_svc"
      traefik.tcp.routers.redis.tls: "true"
      traefik.tcp.routers.redis.tls.certresolver: "myresolver"
      traefik.tcp.services.redis_svc.loadbalancer.server.port: "6379"
    networks:
      - "authentication"
      - "authelia"
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default
    logging:
      driver: "json-file"
      options: {}

  server:
    container_name: auth-srv
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2023.10.7}
    restart: on-failure:5
    command: server
    volumes:
      - /config/authentication/authentik/media:/media
      - /config/authentication/authentik/custom-templates:/templates
    env_file:
      - .env
      - .env.common
      - .env.auth-srv
    ports:
      - "${COMPOSE_PORT_HTTP:-9000}:9000"
      - "${COMPOSE_PORT_HTTPS:-9443}:9443"
    depends_on:
      - postgresql
      - redis
    expose:
      - 8080
      - 8443
    logging:
      driver: "json-file"
      options: {}
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default
    labels:
      traefik.docker.network: "authentication"
      traefik.enable: "true"
      traefik.http.routers.auth.entrypoints: "https"
      traefik.http.routers.auth.rule: "Host(`auth.$DOMAIN`) && PathPrefix(`/outpost.goauthentik.io/`)"
      traefik.http.routers.auth.tls: "true" 
      
  worker:
    container_name: auth-wrkr
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2023.10.7}
    restart: on-failure:5
    command: worker
    # `user: root` and the docker socket volume are optional.
    # See more for the docker socket integration here:
    # https://goauthentik.io/docs/outposts/integrations/docker
    # Removing `user: root` also prevents the worker from fixing the permissions
    # on the mounted folders, so when removing this make sure the folders have the correct UID/GID
    # (1000:1000 by default)
    user: root
    volumes:
      - /config/authentication/authentik/media:/media
      - /config/authentication/authentik/certs:/certs
      - /config/authentication/authentik/custom-templates:/templates
    env_file:
      - .env
      - .env.common
      - .env.auth-wrkr      
    depends_on:
      - postgresql
      - redis
    logging:
      driver: "json-file"
      options: {}
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default

  openldap:
    container_name: "openldap"
    image: "osixia/openldap:latest"
    expose:
      - "389/tcp"
      - "636/tcp"
    entrypoint:
      - "/container/tool/run"
    restart: "on-failure:5"
    hostname: "ldap.$LOCAL.$DOMAIN"    
    env_file:
      - .env.common
      - .env.openldap
    labels:
      traefik.docker.network: "authentication"
      traefik.enable: "true"
      traefik.tcp.routers.openldap.entrypoints: "ldap"
      traefik.tcp.routers.openldap.rule: "HostSNI(`ldap.$LOCAL.$DOMAIN`)"
      traefik.tcp.routers.openldap.service: "openldap_svc"
      traefik.tcp.routers.openldap.tls: "true"
      traefik.tcp.routers.openldap.tls.certresolver: "myresolver"
      traefik.tcp.services.openldap_svc.loadbalancer.server.port: "636"
    volumes:
      - "/config/authentication/openldap/assets:/container/service/slapd/assets"
      - "/config/authentication/openldap/etc/ldap/slapd.d:/etc/ldap/slapd.d"
      - "/config/authentication/openldap/var/lib/ldap:/var/lib/ldap"      
    networks:
      - "openldap"
      - "authentication"
      - "authelia"
    logging:
      driver: "json-file"
      options: {}
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default

  phpldapadmin:
    container_name: "phpldapadmin"
    image: "osixia/phpldapadmin:latest"
    restart: "on-failure:5"
    depends_on:
      - openldap
    expose:
      - "443/tcp"
      - "80/tcp"
    entrypoint:
      - "/container/tool/run"
    hostname: "phpldapadmin.$LOCAL.$DOMAIN"
    env_file:
      - .env.common
      - .env.phpldapadmin
    labels:
      traefik.docker.network: "authentication"
      traefik.enable: "true"
      traefik.http.routers.phpldapadmin.entrypoints: "https"
      traefik.http.routers.phpldapadmin.rule: "Host(`phpldapadmin.$LOCAL.$DOMAIN`)"
      traefik.http.routers.phpldapadmin.service: "phpldapadmin_svc"
      traefik.http.routers.phpldapadmin.tls: "true"
      traefik.http.routers.phpldapadmin.tls.certresolver: "myresolver"
      traefik.http.routers.phpldapadmin.middlewares: "chain-no-auth@file"
      traefik.http.services.phpldapadmin_svc.loadbalancer.server.port: "80"
    networks:
      - "authentication"
      - "openldap"
    logging:
      driver: "json-file"
      options: {}
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default
    volumes:
      - "/config/authentication/phpldapadmin/99-default:/container/environment/99-default"
      - "9340e8e462c1e082f764dfab610637a9d7ab0c1da130f9f646497da33e08472a:/var/www/phpldapadmin"

  # redis:
  #   container_name: "redis"
  #   image: "bitnami/redis:latest"
  #   user: "1001"    
  #   restart: "on-failure:5"
  #   expose:
  #     - "6379/tcp"            
  #   command:
  #     - "/opt/bitnami/scripts/redis/run.sh"
  #   entrypoint:
  #     - "/opt/bitnami/scripts/redis/entrypoint.sh"
  #   env_file:


  mariadb:
    container_name: "mariadb"
    image: "mariadb:lts"
    restart: "on-failure:5"
    env_file:
      - .env.common
      - .env.mariadb
    expose:
      - 3306
    networks:
      - authelia

volumes:
  database:
    driver: local
  redis:
    driver: local

networks:
  authentication:
    name: "authentication"
  openldap:
    name: "openldap"
  authelia:
    name: "authelia"




























