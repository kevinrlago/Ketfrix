---
version: "2.1"
services:

  sonarr:
    image: ghcr.io/hotio/$TV:latest
    container_name: $TV
    #user: ${PUID}:${PGID}
    depends_on:
      - prowlarr
    env_file:
      - .env.common
    volumes:
      - /config/media/$TV:/config
      - /DATA/Plex/Series:/tv
      - /DATA/Downloads/$TV:/downloads
      - /DATA/Downloads/$TV-downloaded:/downloaded
    expose:
      - 8989
    labels:
      - "traefik.docker.network=media"
      - "traefik.enable=true"
      - "traefik.http.routers.$TV.rule=Host(`$TV.$DOMAIN`) || Host(`$TV.$LOCAL.$DOMAIN`) || Host(`$TV.internal.$DOMAIN`)"
      - "traefik.http.routers.$TV.entrypoints=https"
      - "traefik.http.routers.$TV.tls=true"
      - "traefik.http.routers.$TV.service=${TV}_svc"
      - "traefik.http.routers.$TV.middlewares=chain-authelia@file"
      - "traefik.http.routers.$TV.tls.certresolver=myresolver"
      - "traefik.http.services.${TV}_svc.loadbalancer.server.port=8989"
    restart: on-failure:5
    networks:
      - media
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default

  radarr:
    image: ghcr.io/hotio/$FILMS:latest
    container_name: $FILMS
    #user: ${PUID}:${PGID}
    depends_on:
      - prowlarr
    env_file:
      - .env.common
    volumes:
      - /config/media/$FILMS:/config
      - /DATA/Plex/films:/movies
      - /DATA/Downloads/$FILMS:/downloads
      - /DATA/Downloads/$FILMS-downloaded:/downloaded
    expose:
      - 7878
    labels:
      - "traefik.docker.network=media"
      - "traefik.enable=true"
      - "traefik.http.routers.$FILMS.rule=Host(`$FILMS.$DOMAIN`) || Host(`$FILMS.$LOCAL.$DOMAIN`) || Host(`$FILMS.internal.$DOMAIN`)"
      - "traefik.http.routers.$FILMS.entrypoints=https"
      - "traefik.http.routers.$FILMS.tls=true"
      - "traefik.http.routers.$FILMS.service=${FILMS}_svc"
      - "traefik.http.routers.$FILMS.middlewares=chain-authelia@file"
      - "traefik.http.routers.$FILMS.tls.certresolver=myresolver"
      - "traefik.http.services.${FILMS}_svc.loadbalancer.server.port=7878"
    restart: on-failure:5
    networks:
      - media
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default

  lidarr:
    image: ghcr.io/hotio/$MUSIC:latest
    container_name: $MUSIC
    #user: ${PUID}:${PGID}
    depends_on:
      - prowlarr
    env_file:
      - .env.common
    volumes:
      - /config/media/$MUSIC:/config
      - /DATA/Plex/Musica:/music
      - /DATA/Downloads/$MUSIC:/downloads
      - /DATA/Downloads/$MUSIC-downloaded:/downloaded
    expose:
      - 8686
    labels:
      - "traefik.docker.network=media"
      - "traefik.enable=true"
      - "traefik.http.routers.$MUSIC.rule=Host(`$MUSIC.$DOMAIN`) || Host(`$MUSIC.$LOCAL.$DOMAIN`) || Host(`$MUSIC.internal.$DOMAIN`)"
      - "traefik.http.routers.$MUSIC.entrypoints=https"
      - "traefik.http.routers.$MUSIC.tls=true"
      - "traefik.http.routers.$MUSIC.service=${MUSIC}_svc"
      - "traefik.http.routers.$MUSIC.middlewares=chain-authelia@file"
      - "traefik.http.routers.$MUSIC.tls.certresolver=myresolver"
      - "traefik.http.services.${MUSIC}_svc.loadbalancer.server.port=8686"
    restart: on-failure:5
    networks:
      - media
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default

  readarr:
    container_name: $BOOKS
    image: lscr.io/linuxserver/$BOOKS:develop
    #user: ${PUID}:${PGID}
    depends_on:
      - prowlarr
    expose:
      - 8787
    env_file:
      - .env.common
    volumes:
      - /config/media/$BOOKS:/config
      - /DATA/Downloads/Libros:/downloads
      - /Libros/Biblioteca:/books
    labels:
      - "traefik.docker.network=media"
      - "traefik.enable=true"
      - "traefik.http.routers.$BOOKS.rule=Host(`$BOOKS.$DOMAIN`) || Host(`$BOOKS.$LOCAL.$DOMAIN`) || Host(`$BOOKS.internal.$DOMAIN`)"
      - "traefik.http.routers.$BOOKS.entrypoints=https"
      - "traefik.http.routers.$BOOKS.tls=true"
      - "traefik.http.routers.$BOOKS.service=${BOOKS}_svc"
      - "traefik.http.routers.$BOOKS.middlewares=chain-authelia@file"
      - "traefik.http.routers.$BOOKS.tls.certresolver=myresolver"
      - "traefik.http.services.${BOOKS}_svc.loadbalancer.server.port=8787"
    restart: on-failure:5
    networks:
      - media
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default

  unpackerr:
    image: ghcr.io/hotio/$PACK
    container_name: $PACK
    volumes:
      # You need at least this one volume mapped so Unpackerr can find your files to extract.
      # Make sure this matches your Starr apps; the folder mount (/downloads or /data) should be identical.
      - /DATA/Downloads:/downloads
    restart: on-failure:5
    # Get the user:group correct so unpackerr can read and write to your files.
    #user: ${PUID}:${PGID}
    #user: 1000:1000
    # What you see below are defaults for this compose. You only need to modify things specific to your environment.
    # Remove apps and feature configs you do not use or need. 
    # ie. Remove all lines that begin with UN_CMDHOOK, UN_WEBHOOK, UN_FOLDER, UN_WEBSERVER, and other apps you do not use.
    env_file:
      - .env.common
      - .env.$PACK
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default
    networks:
      - media

  prowlarr:
    container_name: $TRACKER
    image: ghcr.io/hotio/$TRACKER
    #user: ${PUID}:${PGID}
    restart: on-failure:5
    depends_on:
      - qbittorrent
    expose:
      - 9696
    env_file:
      - .env.common
    volumes:
      - /config/media/$TRACKER:/config
    labels:
      - "traefik.docker.network=media"
      - "traefik.enable=true"
      - "traefik.http.routers.$TRACKER.rule=Host(`$TRACKER.$DOMAIN`) || Host(`$TRACKER.$LOCAL.$DOMAIN`) || Host(`$TRACKER.internal.$DOMAIN`)"
      - "traefik.http.routers.$TRACKER.entrypoints=https"
      - "traefik.http.routers.$TRACKER.tls=true"
      - "traefik.http.routers.$TRACKER.service=${TRACKER}_svc"
      - "traefik.http.routers.$TRACKER.middlewares=chain-authelia@file"
      - "traefik.http.routers.$TRACKER.tls.certresolver=myresolver"
      - "traefik.http.services.${TRACKER}_svc.loadbalancer.server.port=9696"
    networks:
      - media
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default

  qbitmanage:
    container_name: qbitmanage
    image: ghcr.io/hotio/qbitmanage
    #user: ${PUID}:${PGID}
    restart: on-failure:5
    depends_on:
      - qbittorrent
    env_file:
      - .env.common
    volumes:
      - /config/media/$QMNGMT:/config
      - /DATA/Downloads:/data
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default
    networks:
      - media

  qbittorrent:
    container_name: qbittorrent
    image: lscr.io/linuxserver/qbittorrent:latest
    #user: ${PUID}:${PGID}
    restart: on-failure:5
    expose:
      - 8080
    ports:
      - 9898:9898
    env_file:
      - .env.common
    # environment:
    #   - TZ=Europe/Madrid
    #   - UMASK=002
    volumes:
      - /config/media/$DOWNLOAD/.config:/config
      - /DATA/Downloads:/downloads
    labels:
      - "traefik.docker.network=media"
      - "traefik.enable=true"
      - "traefik.http.routers.$DOWNLOAD.rule=Host( `$DOWNLOAD.$LOCAL.$DOMAIN` )"
      - "traefik.http.routers.$DOWNLOAD.entrypoints=https"
      - "traefik.http.routers.$DOWNLOAD.tls=true"
      - "traefik.http.routers.$DOWNLOAD.service=${DOWNLOAD}_svc"
      - "traefik.http.routers.$DOWNLOAD.middlewares=chain-authelia@file"
      - "traefik.http.routers.$DOWNLOAD.tls.certresolver=myresolver"
      - "traefik.http.services.${DOWNLOAD}_svc.loadbalancer.server.port=8080"
    networks:
      - media
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default

  # bazarr:
  #   container_name: $SUBS
  #   image: ghcr.io/hotio/$SUBS
  #   user: ${PUID}:${PGID}
  #   expose:
  #     - 6767
  #   env_file:
  #     - .env.common
  #   volumes:
  #     - /config/$SUBS:/config
  #     - /DATA/Plex:/data
  #   labels:
  #     - "traefik.docker.network=media"
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.$SUBS.rule=Host(`$SUBS.$DOMAIN`) || Host(`$SUBS.$LOCAL.$DOMAIN` )"
  #     - "traefik.http.routers.$SUBS.entrypoints=https"
  #     - "traefik.http.routers.$SUBS.tls=true"
  #     - "traefik.http.routers.$SUBS.service=${SUBS}_svc"
  #     - "traefik.http.routers.$SUBS.middlewares=chain-authelia@file"
  #     - "traefik.http.routers.$SUBS.tls.certresolver=myresolver"
  #     - "traefik.http.services.${SUBS}_svc.loadbalancer.server.port=6767"
  #   networks:
  #     - media

  jellyfin:
    container_name: $MEDIAJ
    image: ghcr.io/hotio/$MEDIAJ
    #user: ${PUID}:${PGID}
    runtime: nvidia
    devices:
      - "/dev/dri:/dev/dri"
    restart: on-failure:5
    expose:
      - 8096
    env_file:
      - .env.common
      - .env.nvidia
    volumes:
      - /config/media/$MEDIAJ:/config
      - /DATA/Plex:/data
    labels:
      - "traefik.docker.network=media"
      - "traefik.enable=true"
      - "traefik.http.routers.$MEDIAJ.rule=Host(`$MEDIAJ.$DOMAIN`) || Host(`$TV.$LOCAL.$DOMAIN` )"
      - "traefik.http.routers.$MEDIAJ.entrypoints=https"
      - "traefik.http.routers.$MEDIAJ.tls=true"
      - "traefik.http.routers.$MEDIAJ.service=${MEDIAJ}_svc"
      - "traefik.http.routers.$MEDIAJ.middlewares=chain-authelia@file"
      - "traefik.http.routers.$MEDIAJ.tls.certresolver=myresolver"
      - "traefik.http.services.${MEDIAJ}_svc.loadbalancer.server.port=8096"
    networks:
      - media
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default

  overseerr:
    container_name: $REQUESTS
    image: ghcr.io/hotio/$REQUESTS
    #user: ${PUID}:${PGID}
    restart: on-failure:5
    depends_on:
      - sonarr
      - radarr
    expose:
      - 5055
    env_file:
      - .env.common
    volumes:
      - /config/media/$REQUESTS:/config
    labels:
      - "traefik.docker.network=media"
      - "traefik.enable=true"
      - "traefik.http.routers.$REQUESTS.rule=Host(`$REQUESTS.$DOMAIN`)"
      - "traefik.http.routers.$REQUESTS.entrypoints=https"
      - "traefik.http.routers.$REQUESTS.tls=true"
      - "traefik.http.routers.$REQUESTS.service=${REQUESTS}_svc"
      - "traefik.http.routers.$REQUESTS.middlewares=chain-authelia@file"
      - "traefik.http.routers.$REQUESTS.tls.certresolver=myresolver"
      - "traefik.http.services.${REQUESTS}_svc.loadbalancer.server.port=5055"
    networks:
      - media
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default

  flood:
    container_name: $DOWNMNGMT
    image: jesec/$DOWNMNGMT:master
    user: ${PUID}:${PGID}
    restart: on-failure:5
    depends_on:
      - qbittorrent
    command: --port 3001 --allowedpath /data
    env_file:
      - .env.common
      - .env.$DOWNMNGMT
    volumes:
      - /config/media/$DOWNLOAD:/config
      - /DATA/Downloads:/data
    expose:
      - 3001
    labels:
      - "traefik.docker.network=media"
      - "traefik.enable=true"
      - "traefik.http.routers.$DOWNMNGMT.rule=Host(`$DOWNMNGMT.$DOMAIN`) || Host(`$DOWNMNGMT.$LOCAL.$DOMAIN` )"
      - "traefik.http.routers.$DOWNMNGMT.entrypoints=https"
      - "traefik.http.routers.$DOWNMNGMT.tls=true"
      - "traefik.http.routers.$DOWNMNGMT.service=${DOWNMNGMT}_svc"
      - "traefik.http.routers.$DOWNMNGMT.middlewares=chain-authelia@file"
      - "traefik.http.routers.$DOWNMNGMT.tls.certresolver=myresolver"
      - "traefik.http.services.${DOWNMNGMT}_svc.loadbalancer.server.port=3001"
    networks:
      - media
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default

  tautulli:
    container_name: $TAU
    image: ghcr.io/hotio/$TAU
    #user: ${PUID}:${PGID}
    restart: on-failure:5
    depends_on:
      - plex
    expose:
      - 8181
    env_file:
      - .env.common
    volumes:
      - /config/media/$TAU:/config
    labels:
      - "traefik.docker.network=media"
      - "traefik.enable=true"
      - "traefik.http.routers.$TAU.rule=Host(`$TAU.$DOMAIN`) || Host(`$TAU.$LOCAL.$DOMAIN`) || Host(`$TAU.internal.$DOMAIN`)"
      - "traefik.http.routers.$TAU.entrypoints=https"
      - "traefik.http.routers.$TAU.tls=true"
      - "traefik.http.routers.$TAU.service=${TAU}_svc"
      - "traefik.http.routers.$TAU.middlewares=chain-authelia@file"
      - "traefik.http.routers.$TAU.tls.certresolver=myresolver"
      - "traefik.http.services.${TAU}_svc.loadbalancer.server.port=8181"
    networks:
      - media
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default

  calibre-web:
    image: lscr.io/linuxserver/$WEB:latest
    container_name: $WEB
    #user: ${PUID}:${PGID}
    env_file:
      - .env.common
      - .env.$WEB
    volumes:
      - /config/media/$WEB:/config
      - /Libros/Biblioteca:/books
    expose:
      - 8083
    restart: on-failure:5
    labels:
      - "traefik.docker.network=media"
      - "traefik.enable=true"
      - "traefik.http.routers.$WEB.rule=Host(`$WEB.$DOMAIN`) || Host(`$WEB.$LOCAL.$DOMAIN`)"
      - "traefik.http.routers.$WEB.entrypoints=https"
      - "traefik.http.routers.$WEB.tls=true"
      - "traefik.http.routers.$WEB.service=${WEB}_svc"
      - "traefik.http.routers.$WEB.middlewares=chain-authelia@file"
      - "traefik.http.routers.$WEB.tls.certresolver=myresolver"
      - "traefik.http.services.${WEB}_svc.loadbalancer.server.port=8083"
    networks:
      - media
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default

  calibre:
    image: lscr.io/linuxserver/$LIB:latest
    container_name: $LIB
   # user: ${PUID}:${PGID}
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default
    env_file:
      - .env.common
      - .env.$LIB
    volumes:
      - /Libros/Biblioteca:/books
      - /config/media/calibre:/config
    expose:
      - 8080
      - 8181
      - 8081
    restart: on-failure:5
    labels:
      - "traefik.docker.network=media"
      - "traefik.enable=true"
      - "traefik.http.routers.$LIB.rule=Host(`$LIB.$LOCAL.$DOMAIN`)"
      - "traefik.http.routers.$LIB.entrypoints=https"
      - "traefik.http.routers.$LIB.tls=true"
      - "traefik.http.routers.$LIB.service=${LIB}_svc"
      - "traefik.http.routers.$LIB.middlewares=chain-authelia@file"
      - "traefik.http.routers.$LIB.tls.certresolver=myresolver"
      - "traefik.http.services.${LIB}_svc.loadbalancer.server.port=8080"
    networks:
      - media


  hedgedoc:
    image: quay.io/hedgedoc/hedgedoc:latest
    container_name: $DOC
    #user: ${PUID}:${PGID}
    env_file:
      - .env.common
      - .env.$DOC
    volumes:
      - /config/media/$DOC:/config
    expose:
      - 3000
    restart: on-failure:5
    depends_on:
      - database
    labels:
      - "traefik.docker.network=media"
      - "traefik.enable=true"
      - "traefik.http.routers.$DOC.rule=Host(`$DOC.$DOMAIN`) || Host(`$DOC.$LOCAL.$DOMAIN`)"
      - "traefik.http.routers.$DOC.entrypoints=https"
      - "traefik.http.routers.$DOC.tls=true"
      - "traefik.http.routers.$DOC.service=${DOC}_svc"
      - "traefik.http.routers.$DOC.middlewares=chain-authelia@file"
      - "traefik.http.routers.$DOC.tls.certresolver=myresolver"
      - "traefik.http.services.${DOC}_svc.loadbalancer.server.port=3000"
    networks:
      - media
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default

  database:
    image: postgres:13.4-alpine
    container_name: $DOCDB
    env_file:
      - .env.$DOCDB
    volumes:
      - /config/media/$DOC/postgresql:/var/lib/postgresql/data
    restart: on-failure:5
    networks:
      - media
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default

  plex:
    image: lscr.io/linuxserver/$MEDIA:latest
    container_name: $MEDIA
    #user: ${PUID}:${PGID}
    expose:
      - 8324
      - 1900
      - 32469
      - 3005
      - 33400
    env_file:
      - .env.common
      - .env.$MEDIA
      - .env.nvidia
    ports:
      - "32400:32400"
      - "32410:32410/udp"
      - "32412:32412/udp"
      - "32413:32413/udp"
      - "32414:32414/udp"
    runtime: nvidia
    devices:
      - "/dev/dri:/dev/dri"
    volumes:
      - /config/media/$MEDIA:/transcode
      - /DATA/Plex:/data/media
      - /config/media/plexms:/config
    restart: on-failure:5
    labels:
      - "traefik.docker.network=media"
      - "traefik.enable=true"
      - "traefik.http.routers.$MEDIA.rule=Host(`$MEDIA.$DOMAIN`) || Host(`$MEDIA.$LOCAL.$DOMAIN`)"
      - "traefik.http.routers.$MEDIA.entrypoints=https"
      - "traefik.http.routers.$MEDIA.tls=true"
      - "traefik.http.routers.$MEDIA.service=${MEDIA}_svc"
      - "traefik.http.routers.$MEDIA.middlewares=chain-authelia@file"
      - "traefik.http.routers.$MEDIA.tls.certresolver=myresolver"
      - "traefik.http.services.${MEDIA}_svc.loadbalancer.server.port=32400"
    networks:
      - media
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default

  XTEVE:
    image: dnsforge/xteve:latest
    container_name: $XTEVE
    #user: ${PUID}:${PGID}
    depends_on:
      - acelink
    env_file:
      - .env.common
      - .env.$XTEVE
    volumes:
      - /config/media/xteve/conf:/home/xteve/conf
    expose:
      - 34400
    restart: on-failure:5
    labels:
      - "traefik.docker.network=media"
      - "traefik.enable=true"
      - "traefik.http.routers.$XTEVE.rule=Host(`$XTEVE.$DOMAIN`) || Host(`$XTEVE.$LOCAL.$DOMAIN`)"
      - "traefik.http.routers.$XTEVE.entrypoints=https"
      - "traefik.http.routers.$XTEVE.tls=true"
      - "traefik.http.routers.$XTEVE.service=${XTEVE}_svc"
      - "traefik.http.routers.$XTEVE.middlewares=chain-authelia@file"
      - "traefik.http.routers.$XTEVE.tls.certresolver=myresolver"
      - "traefik.http.services.${XTEVE}_svc.loadbalancer.server.port=34400"
    networks:
      - media
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default

  acelink:
    container_name: acelink
    image: blaiseio/acelink
    #user: ${PUID}:${PGID}
    expose:
      - 6878
    env_file:
      - .env.common
    network_mode: host
    restart: on-failure:5
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default

  autoscan:
    container_name: autoscan
    image: ghcr.io/hotio/autoscan
    #user: ${PUID}:${PGID}
    depends_on:
      - plex
    expose:
      - 3030
    env_file:
      - .env.common
      - .env.autoscan
    volumes:
      - /config/media/autoscan:/config
    restart: on-failure:5
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default
    labels:
      - "traefik.docker.network=media"
      - "traefik.enable=true"
      - "traefik.http.routers.autoscan.rule=Host(`autoscan.$DOMAIN`) || Host(`autoscan.$LOCAL.$DOMAIN`)"
      - "traefik.http.routers.autoscan.entrypoints=https"
      - "traefik.http.routers.autoscan.tls=true"
      - "traefik.http.routers.autoscan.service=autoscan_svc"
      - "traefik.http.routers.autoscan.middlewares=chain-authelia@file"
      - "traefik.http.routers.autoscan.tls.certresolver=myresolver"
      - "traefik.http.services.autoscan_svc.loadbalancer.server.port=3030"
    networks:
      - media

networks:
  media:
    name: "media"

...
